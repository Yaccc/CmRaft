option java_package = "com.chicm.cmraft.protobuf.generated";
option java_outer_classname = "RaftProtos";
option java_generic_services = true;
option java_generate_equals_and_hash = true;
option optimize_for = SPEED;

message ServerId {
  required string host_name = 1;
  required uint32 port = 2;
  optional uint64 start_code = 3;
}

message RequestHeader {
  required uint32 id = 1;
  required string request_name = 2;
}

message ResponseHeader {
  required uint32 id = 1;
  required string response_name =2;
}


message CollectVoteRequest {
  required ServerId candidateId = 1;
  required uint64 term = 2;
  required uint64 lastLogIndex = 3;
  required uint64 lastLogTerm = 4;
}

message CollectVoteResponse {
  required ServerId fromHost = 1;
  required uint64 term = 2;
  required bool granted = 3;
}

message TestRpcRequest {
  optional bytes data = 1;
}

message TestRpcResponse {
  optional bytes result = 1;
}

message RaftEntry {
  optional uint64 index = 1;
  optional bytes key = 2;
  optional bytes value = 3;
}

message AppendEntriesRequest {
  optional uint64 term = 1;
  optional ServerId leaderId = 2;
  optional uint64 leaderCommit = 3;
  optional uint64 prevLogIndex = 4;
  optional uint64 prevLogTerm = 5;
  repeated RaftEntry entries = 6;
}

message AppendEntriesResponse {
  optional uint64 term = 1;
  optional bool success = 2;
}

service RaftService {
  rpc collectVote(CollectVoteRequest)
    returns(CollectVoteResponse);
    
  rpc appendEntries(AppendEntriesRequest)
    returns(AppendEntriesResponse);
  
  rpc testRpc(TestRpcRequest)
    returns(TestRpcResponse);
}
